import{_ as n}from"./chunks/web-component-sreenshot.08bfbacb.js";import{_ as l,o,c as p,x as s,a as e,t,N as c}from"./chunks/framework.a6903ff1.js";const f=JSON.parse('{"title":"Plugin Types","description":"","frontmatter":{"title":"Plugin Types","editLink":true},"headers":[],"relativePath":"guide/plugin-index.md"}'),r={name:"guide/plugin-index.md"},y={id:"frontmatter-title",tabindex:"-1"},F=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),D=c(`<p>一共支持三种 pluign 类型，分别是 <a href="#component-type">component</a>, <a href="#function-type">function</a>, <a href="#iframe-type">iframe</a></p><h2 id="component-type" tabindex="-1">Component Type <a class="header-anchor" href="#component-type" aria-label="Permalink to &quot;Component Type&quot;">​</a></h2><p><code>component plugin</code> 主要负责在 <code>Slot</code> 中渲染 UI。和它的名字不同，其实对外暴露的并不是一个组件，而是一个渲染组件的 <code>render</code> 函数，并接受 rootElement 和 props 作为入参。由于前端框架众多，DAM 用了 React开发，如果限制 plugin抛出一个 React 组件，那么将大大降低开发的灵活性，和不同 React 版本兼容的问题。所以采用了 <code>render</code> 函数的方式，这样打包产物就包含了框架 runtime 和 UI组件，可以与 DAM 互不依赖。</p><p>component plugin 的组件会被作为一个 <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank" rel="noreferrer"><code>Web Component</code></a> 渲染到 Slot 中，并且支持开启 <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM" target="_blank" rel="noreferrer">Shadow Dom</a>。这样做的好处是，可以避免 CSS 样式污染，也可以避免不同插件之间的 DOM 事件冲突。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-hWC3S" id="tab-FBU_oQI" checked="checked"><label for="tab-FBU_oQI">react-18.tsx</label><input type="radio" name="group-hWC3S" id="tab-kYYgBdL"><label for="tab-kYYgBdL">react-16.tsx</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createRoot</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Root</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">react-dom/client</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> App </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./App</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> weakMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WeakMap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">HTMLElement</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Root</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> render </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">root</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLDivElement</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ShadowDom</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">weakMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">weakMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createRoot</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">weakMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">!.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(&lt;</span><span style="color:#FFCB6B;">App</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{...</span><span style="color:#FFCB6B;">props</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> /&gt;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> App </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./App</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> render </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">root</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLDivElement</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ShadowDom</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ReactDOM</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(&lt;</span><span style="color:#FFCB6B;">App</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{...</span><span style="color:#FFCB6B;">props</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> /&gt;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div></div></div><p><img src="`+n+`" alt="web component"></p><h3 id="plugin-配置导出规范" tabindex="-1"><span style="color:var(--vp-c-brand);">Plugin 配置导出规范</span> <a class="header-anchor" href="#plugin-配置导出规范" aria-label="Permalink to &quot;&lt;span style=&quot;color: var(--vp-c-brand)&quot;&gt;Plugin 配置导出规范&lt;/span&gt;&quot;">​</a></h3><p>不接受 <code>default</code> 导出，接受具名导出，如下：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginExport</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        render</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">container</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">HTMLElement</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ShadowRoot</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        cssString</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        useShadowDom</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> pluginExport </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> PluginExport.Component</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="shadow-dom" tabindex="-1"><code>Shadow Dom</code> <a class="header-anchor" href="#shadow-dom" aria-label="Permalink to &quot;\`Shadow Dom\`&quot;">​</a></h3><ul><li><h4 id="shadow-dom-默认开启-控制开关为-useshadowdom-字段" tabindex="-1">Shadow Dom 默认开启，控制开关为 <code>useShadowDom</code> 字段: <a class="header-anchor" href="#shadow-dom-默认开启-控制开关为-useshadowdom-字段" aria-label="Permalink to &quot;Shadow Dom 默认开启，控制开关为 \`useShadowDom\` 字段:&quot;">​</a></h4></li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> render </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{...}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> useShadowDom </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">render</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">useShadowDom</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><h4 id="shadow-dom-的-css-样式" tabindex="-1">Shadow Dom 的 <code>CSS</code> 样式 <a class="header-anchor" href="#shadow-dom-的-css-样式" aria-label="Permalink to &quot;Shadow Dom 的 \`CSS\` 样式&quot;">​</a></h4></li></ul><p>Shadow Dom 具有天然样式隔离（shadow root里面和外层的样式互不影响,），但是外层的 css variable和一些可继承的属性，会被继承到 Shadow Dom 里面（font-family等）。</p><p>css 样式正常会直接注入到全局 (header 下面), 而使用 <code>shadow dom</code> 到话需要把 css 注入到 <code>shadow root</code> 下面，所以需要以具名变量 (<code>cssString</code>) 的方式导出 plugin 的 css, 有两种方式：</p><ol><li><p>一种是使用我们提供的 vite plugin</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Work In Progress</p></div></li><li><p>手动导出 vite 提供 <a href="https://vitejs.dev/guide/features.html#disabling-css-injection-into-the-page" target="_blank" rel="noreferrer">Inline CSS Import</a>, 以 <code>?inline</code> 作为 import 路径的后缀:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> appCssString </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./app.module.scss?inline</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(appCssString) </span><span style="color:#676E95;font-style:italic;">// { root: {display: flex, background: red}...}</span></span></code></pre></div><p>所以你需要手动以 <code>inline css import</code> 的方式 import 所有依赖的 css, 然后把字符串拼接起来，作为变量 <code>cssString</code> 字符串导出:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> appCssString </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./app.module.scss?inline</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> layoutCssString </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./layout.module.scss?inline</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> headerCssString </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./header.module.scss?inline</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cssString </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">appCssString</span><span style="color:#89DDFF;">}\${</span><span style="color:#A6ACCD;">layoutCssString</span><span style="color:#89DDFF;">}\${</span><span style="color:#A6ACCD;">headerCssString</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">cssString</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">render</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">useShadowDom</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ol><h2 id="function-type" tabindex="-1">Function Type <a class="header-anchor" href="#function-type" aria-label="Permalink to &quot;Function Type&quot;">​</a></h2><p><code>function plugin</code> 一般作为，比如说文件上传链路的前置或者后置校验，在校验过程中也可以做唤起弹窗之类的 UI 操作（这个取决于 plugin 开发方）。总之，它不会渲染任何 UI 到 Slot 中。</p><h3 id="function-plugin-配置导出规范" tabindex="-1"><span style="color:var(--vp-c-brand);">Function plugin 配置导出规范</span> <a class="header-anchor" href="#function-plugin-配置导出规范" aria-label="Permalink to &quot;&lt;span style=&quot;color: var(--vp-c-brand)&quot;&gt;Function plugin 配置导出规范&lt;/span&gt;&quot;">​</a></h3><p>作为 <code>default</code> 导出</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginExport</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">app</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">PluginApp</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> pluginExport </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginExport</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="iframe-type" tabindex="-1">Iframe Type <a class="header-anchor" href="#iframe-type" aria-label="Permalink to &quot;Iframe Type&quot;">​</a></h2><p><code>Iframe Plugin</code> 就是正常的 web 应用，和主应用的数据交换需要遵循 <a href="./communication.html">communication</a>，并且具体 <code>slot</code> 对应的 传输数据的 interface 见 <a href="./.html"></a>。 开发，打包，上传完成之后把对应的 <code>index.html</code> 的 <code>URL地址</code>保存在想要在 DAM 插入的对应 <code>slot</code> 中。</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p><a href="./plugin-component.html">Universal component plugin example</a></p><p><a href="./plugin-function.html">Function example</a></p><p><a href="./plugin-iframe.html">Iframe plugin example</a></p>`,27);function i(a,C,d,A,m,u){return o(),p("div",null,[s("h1",y,[e(t(a.$frontmatter.title)+" ",1),F]),D])}const b=l(r,[["render",i]]);export{f as __pageData,b as default};
