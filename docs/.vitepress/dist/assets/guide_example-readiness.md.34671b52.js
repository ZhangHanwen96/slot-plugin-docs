import{_ as o,o as p,c as e,x as s,a as n,D as l,N as t,B as c}from"./chunks/framework.a6903ff1.js";const w=JSON.parse('{"title":"Communication","description":"","frontmatter":{"lastUpdated":true,"title":"Communication","layout":"doc"},"headers":[],"relativePath":"guide/example-readiness.md"}'),r={name:"guide/example-readiness.md"},y=s("h2",{id:"插件开发流程",tabindex:"-1"},[n("插件开发流程 "),s("a",{class:"header-anchor",href:"#插件开发流程","aria-label":'Permalink to "插件开发流程"'},"​")],-1),D=s("li",null,"首先查看 slot 列表，是否有符合的 slot，如果没有，需要向 PM 提需求",-1),F=s("li",null,"启动开发服务器，开发 plugin。可以先当作正常组件开发",-1),i=s("ol",null,[s("li",null,"开发: localhost:3000"),s("li",null,"UAT & PROD 需要上传打包后的静态文件到 CDN，然后配置 plugin 的导入URL")],-1),A=s("strong",null,"4.2",-1),C=s("i",null,"@Hanwen",-1),d=t(`<h3 id="开发相关联系-hanwen-zhang-张瀚文" tabindex="-1">开发相关联系 @Hanwen Zhang 张瀚文 <a class="header-anchor" href="#开发相关联系-hanwen-zhang-张瀚文" aria-label="Permalink to &quot;开发相关联系 @Hanwen Zhang 张瀚文&quot;">​</a></h3><h2 id="component-type-plugin-简单例子-前端开发向" tabindex="-1">Component type plugin 简单例子 (前端开发向) <a class="header-anchor" href="#component-type-plugin-简单例子-前端开发向" aria-label="Permalink to &quot;Component type plugin 简单例子 (前端开发向)&quot;">​</a></h2><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> App </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./App</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> weakMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WeakMap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">HTMLElement</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Root</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> render </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">root</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLDivElement</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ShadowDom</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">weakMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">weakMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createRoot</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">weakMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">!.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;"> {...</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">} /&gt;,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li><code>App</code> 是一个 React 组件</li><li>具名导出 <code>render</code></li></ul><p>以上就是正常的 React 组件开发，只是把 <code>ReactDOM.render</code> 换成了我们定义的 <code>render</code> 函数，这样就可以在 DAM 中使用了。</p>`,5);function u(_,h,g,m,B,f){const a=c("Badge");return p(),e("div",null,[y,s("ol",null,[D,s("li",null,[n("决定用哪种类型的 plugin，用 cli（react） 生成 plugin 模版 "),l(a,{type:"warning",text:"TBD"})]),F,s("li",null,[n("需要在 DAM 里验证，CS后台配置 plugin 的导入URL "),l(a,{type:"warning",text:"TBD"}),i]),s("li",null,[A,n(" 需要依赖 cdn上传工具 "),l(a,{type:"warning",text:"TBD"}),n("，现阶段联系tezign基建同事 "),C])]),d])}const T=o(r,[["render",u]]);export{w as __pageData,T as default};
